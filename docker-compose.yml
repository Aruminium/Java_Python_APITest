version: '3'
services:
  flask:
    build:
      context: .
      dockerfile: ./Python/Dockerfile
    ports:
      - 5000:5000
    container_name: flask
    volumes:
      - ./Python:/Python
    tty: true
    networks:
      nginx_network:
        aliases:
          - server
    restart: always

  spring:
    build:
      context: .
      dockerfile: spring-app/Dockerfile
    container_name: spring
    env_file:
      - ./Mysql/db.env
      - ./spring-app/src/main/resources/linebot.env
    tty: true
    volumes:
      - ./spring-app/:/app/
    working_dir: /app/
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - mysql
    networks:
      nginx_network:
        aliases:
          - client

  mysql:
    build: ./mysql
    container_name: mysql
    env_file:
      - ./mysql/db.env
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/log:/var/log/mysql
    ports:
      - 3306:3306

  dbclient:
    image: phpmyadmin/phpmyadmin
    container_name: dbclient
    environment:
      - PMA_ARBITRARY=${PMA_ARBITRARY}
      - PMA_HOST=${PMA_HOST}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    ports:
      - 4200:80
    volumes:
      - ./dbclient/sessions:/sessions
    depends_on:
      - mysql

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - spring
      - flask
    networks:
      - nginx_network

networks:
  nginx_network:
    driver: bridge